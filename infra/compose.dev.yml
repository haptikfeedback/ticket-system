services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: tickets
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 30
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build:
      context: ..
      dockerfile: infra/docker/backend.Dockerfile
    working_dir: /app
    environment:
      - PYTHONPATH=/app/src
    env_file:
      - ../.env
    volumes:
      - ../apps/backend:/app
      - ../docs:/app/docs
    command: bash -lc "python wait_for_db.py && python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"

  worker:
    build:
      context: ..
      dockerfile: infra/docker/backend.Dockerfile
    working_dir: /app
    environment:
      - PYTHONPATH=/app/src
    env_file:
      - ../.env
    volumes:
      - ../apps/backend:/app
      - ../docs:/app/docs
    command: bash -lc "celery -A core worker -l info"
    depends_on:
      redis:
        condition: service_started
      backend:
        condition: service_started

  beat:
    build:
      context: ..
      dockerfile: infra/docker/backend.Dockerfile
    working_dir: /app
    environment:
      - PYTHONPATH=/app/src
    env_file:
      - ../.env
    volumes:
      - ../apps/backend:/app
      - ../docs:/app/docs
    command: bash -lc "celery -A core beat -l info"
    depends_on:
      redis:
        condition: service_started
      backend:
        condition: service_started

volumes:
  pgdata:
